{
  "swagger": "2.0",
  "info": {
    "title": "AUTH API",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "RoleService"
    },
    {
      "name": "PermissionService"
    },
    {
      "name": "SessionService"
    },
    {
      "name": "UserService"
    },
    {
      "name": "CompreFaceService"
    },
    {
      "name": "AlifService"
    },
    {
      "name": "AnorService"
    },
    {
      "name": "CustomerService"
    },
    {
      "name": "ImanCustomerService"
    },
    {
      "name": "OpenService"
    },
    {
      "name": "PremiumService"
    },
    {
      "name": "ProviderService"
    },
    {
      "name": "SharedService"
    },
    {
      "name": "TBCService"
    },
    {
      "name": "VariantService"
    },
    {
      "name": "LogService"
    },
    {
      "name": "ReportService"
    },
    {
      "name": "SmsService"
    },
    {
      "name": "MyIdService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/active-agreement/{user_id}/{provider}": {
      "get": {
        "operationId": "SharedService_CheckActiveAgreement",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceCheckActiveAgreementResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SharedService"
        ]
      }
    },
    "/v1/agents": {
      "get": {
        "operationId": "SharedService_GetAgentsList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetAgentsListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "year",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branch_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SharedService"
        ]
      }
    },
    "/v1/agreement-status": {
      "put": {
        "operationId": "SharedService_UpdateCustomerOrderStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceUpdateCustomerOrderStatusRequest"
            }
          }
        ],
        "tags": [
          "SharedService"
        ]
      }
    },
    "/v1/agreement/cancel-one-c-agreement": {
      "post": {
        "operationId": "SharedService_CancelOneCPayment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceCancelOneCPaymentRequest"
            }
          }
        ],
        "tags": [
          "SharedService"
        ]
      }
    },
    "/v1/agreement/{id}": {
      "get": {
        "operationId": "SharedService_AgreementByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceAgreementByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SharedService"
        ]
      }
    },
    "/v1/agreements": {
      "get": {
        "operationId": "SharedService_GetAgreements",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceAgreementsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search_field",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "phone_number",
              "pinfl",
              "first_name",
              "pass_data"
            ],
            "default": "phone_number"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customer_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "agents",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_refund",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "provider_slugs",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SharedService"
        ]
      }
    },
    "/v1/alif/application-conditions": {
      "get": {
        "summary": "This request for alif get application conditions",
        "description": "This request for alif get application conditions in Provider service",
        "operationId": "AlifService_ApplicationConditions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceApplicationConditionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AlifService"
        ]
      }
    },
    "/v1/alif/application-items/{order_id}": {
      "get": {
        "operationId": "AlifService_GetApplicationItems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetApplicationItemsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AlifService"
        ]
      }
    },
    "/v1/alif/application-marking": {
      "put": {
        "operationId": "AlifService_UpdateMarking",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceUpdateMarkingRequest"
            }
          }
        ],
        "tags": [
          "AlifService"
        ]
      }
    },
    "/v1/alif/application/{order_id}": {
      "get": {
        "summary": "This request for alif get applications alifshop",
        "description": "This request for alif get applications alifshop in Provider service",
        "operationId": "AlifService_ApplicationByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceApplicationByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AlifService"
        ]
      }
    },
    "/v1/alif/applications/alifshop": {
      "get": {
        "summary": "This request for alif get applications alifshop",
        "description": "This request for alif get applications alifshop in Provider service",
        "operationId": "AlifService_ApplicationsAlifshop",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceApplicationsAlifshopResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AlifService"
        ]
      }
    },
    "/v1/alif/applications/cancel/{order_id}": {
      "post": {
        "summary": "This request for cancel alif application",
        "description": "This request for cancel alif application in Provider service.",
        "operationId": "AlifService_ApplicationsCancel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceApplicationCancelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlifServiceApplicationsCancelBody"
            }
          }
        ],
        "tags": [
          "AlifService"
        ]
      }
    },
    "/v1/alif/applications/confirm": {
      "post": {
        "summary": "This request for confirm alif application",
        "description": "This request for confirm alif application in Provider service.",
        "operationId": "AlifService_ApplicationsConfirm",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceApplicationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceApplicationConfirmRequest"
            }
          }
        ],
        "tags": [
          "AlifService"
        ]
      }
    },
    "/v1/alif/applications/store-full": {
      "post": {
        "summary": "This request for create alif application store",
        "description": "This request for create alif application store in Provider service.",
        "operationId": "AlifService_ApplicationsStoreFull",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceApplicationStoreFullResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceApplicationStoreFullRequest"
            }
          }
        ],
        "tags": [
          "AlifService"
        ]
      }
    },
    "/v1/alif/applications/verify/{order_id}": {
      "post": {
        "summary": "This request for verify alif application",
        "description": "This request for verify alif application in Provider service.",
        "operationId": "AlifService_ApplicationsVerify",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceApplicationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AlifService"
        ]
      }
    },
    "/v1/alif/customer/questionare": {
      "get": {
        "summary": "This request for alif get activity areas",
        "description": "This request for alif activity areas in Provider service",
        "operationId": "AlifService_GetActivityAreas",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetActivityAreasResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AlifService"
        ]
      }
    },
    "/v1/alif/get-limit/{task_id}": {
      "get": {
        "summary": "This request for alif get limit",
        "description": "This request for alif get limit in Provider service",
        "operationId": "AlifService_GetLimit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceAlifLimitResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AlifService"
        ]
      }
    },
    "/v1/alif/start-onboarding": {
      "post": {
        "summary": "This request for alif start onbarding",
        "description": "This request for alif start onbarding in Provider service",
        "operationId": "AlifService_StartOnboarding",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceCreateClientResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceStartOnboardingRequest"
            }
          }
        ],
        "tags": [
          "AlifService"
        ]
      }
    },
    "/v1/anor/get-limit/{task_id}": {
      "get": {
        "summary": "This request for anor get limit",
        "description": "This request for anor get limit in Provider service",
        "operationId": "AnorService_GetLimit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceAnorLimitResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AnorService"
        ]
      }
    },
    "/v1/anor/send-limit-to-anor-mobile": {
      "post": {
        "summary": "This request for send limit to anor mobile",
        "description": "This request for send limit to anor mobile in Provider service",
        "operationId": "AnorService_SendLimitToAnorMobile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceSendLimitToAnorMobileRequest"
            }
          }
        ],
        "tags": [
          "AnorService"
        ]
      }
    },
    "/v1/auth/login": {
      "post": {
        "summary": "This is user login api",
        "description": "This is login user and return token, platform must be one of the following values [web, mobile]",
        "operationId": "SessionService_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auth_serviceLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auth_serviceLoginRequest"
            }
          }
        ],
        "tags": [
          "sessions"
        ]
      }
    },
    "/v1/auth/logout": {
      "post": {
        "summary": "This is for user logout",
        "description": "This is for user logout",
        "operationId": "SessionService_Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "sessions"
        ]
      }
    },
    "/v1/auth/refresh": {
      "post": {
        "summary": "This request refresh user token",
        "description": "This request refresh user token",
        "operationId": "SessionService_RefreshToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auth_serviceRefreshTokenRespone"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auth_serviceRefreshTokenRequest"
            }
          }
        ],
        "tags": [
          "sessions"
        ]
      }
    },
    "/v1/auth/send_verification_code": {
      "post": {
        "summary": "This is for sending verification code",
        "description": "This is for sending verification code",
        "operationId": "SessionService_SendVerificationCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auth_serviceSendVerificationCodeRequest"
            }
          }
        ],
        "tags": [
          "sessions"
        ]
      }
    },
    "/v1/auth/sign-up": {
      "post": {
        "summary": "This request sign-up user",
        "description": "This request sign-up user",
        "operationId": "SessionService_SignUp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auth_serviceSignUpResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auth_serviceSignUpRequest"
            }
          }
        ],
        "tags": [
          "sessions"
        ]
      }
    },
    "/v1/bonus-plans": {
      "get": {
        "operationId": "SharedService_GetBonusAndPlans",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetBonusAndPlansResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "branch_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "agent_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "year",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "SharedService"
        ]
      }
    },
    "/v1/branch": {
      "post": {
        "operationId": "SharedService_CreateBranch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceCreateBranchRequest"
            }
          }
        ],
        "tags": [
          "SharedService"
        ]
      },
      "put": {
        "operationId": "SharedService_UpdateBranch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceBranch"
            }
          }
        ],
        "tags": [
          "SharedService"
        ]
      }
    },
    "/v1/branch/plan": {
      "post": {
        "operationId": "SharedService_CreateBranchPlan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceBranchPlan"
            }
          }
        ],
        "tags": [
          "SharedService"
        ]
      },
      "put": {
        "operationId": "SharedService_UpdateBranchPlan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceBranchPlan"
            }
          }
        ],
        "tags": [
          "SharedService"
        ]
      }
    },
    "/v1/branch/plan/{id}": {
      "get": {
        "operationId": "SharedService_GetBranchPlanByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceBranchPlan"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SharedService"
        ]
      },
      "delete": {
        "operationId": "SharedService_DeleteBranchPlan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SharedService"
        ]
      }
    },
    "/v1/branch/{id}": {
      "get": {
        "operationId": "SharedService_GetBranchByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetBranchByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SharedService"
        ]
      },
      "delete": {
        "operationId": "SharedService_DeleteBranch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SharedService"
        ]
      }
    },
    "/v1/branches": {
      "get": {
        "operationId": "SharedService_GetBranches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetBranchesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "branch_ids",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SharedService"
        ]
      }
    },
    "/v1/branches/plan": {
      "get": {
        "operationId": "SharedService_GetBranchPlans",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetBranchPlansResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "branch_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "SharedService"
        ]
      }
    },
    "/v1/cancel-successfull-order": {
      "post": {
        "operationId": "SharedService_CancelSuccessfullOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceCancelSuccessfullOrderRequest"
            }
          }
        ],
        "tags": [
          "SharedService"
        ]
      }
    },
    "/v1/check-products-remainder": {
      "post": {
        "operationId": "ProviderService_CheckProductsRemainder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceCheckProductsRemainderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceCheckProductsRemainderRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/confirm-card": {
      "post": {
        "operationId": "CustomerService_ConfirmCustomerCard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceConfirmCustomerCardResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceConfirmCustomerCardRequest"
            }
          }
        ],
        "tags": [
          "CustomerService"
        ]
      }
    },
    "/v1/confirm-otp": {
      "post": {
        "summary": "This request for sending otp code",
        "description": "This request for sending otp code",
        "operationId": "SmsService_ConfirmOtp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sms_serviceConfirmSmsRequest"
            }
          }
        ],
        "tags": [
          "SmsService"
        ]
      }
    },
    "/v1/create-emp": {
      "post": {
        "operationId": "UserService_CreateEmployees",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/create-employee": {
      "post": {
        "operationId": "UserService_CreateEmployee",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "phone_number",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "full_name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "agent_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "branch_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "created_at",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "updated_at",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deleted_at",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "role_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/customer": {
      "get": {
        "operationId": "SharedService_GetListCustomers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetListCustomersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search_field",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "phone_number",
              "pinfl",
              "first_name",
              "pass_data"
            ],
            "default": "phone_number"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customer_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SharedService"
        ]
      }
    },
    "/v1/customer-card": {
      "post": {
        "operationId": "CustomerService_CreateCustomerCard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceCreateCustomerCardResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceCreateCustomerCardRequest"
            }
          }
        ],
        "tags": [
          "CustomerService"
        ]
      },
      "put": {
        "operationId": "CustomerService_UpdateCustomerMainCard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceUpdateCustomerMainCardRequest"
            }
          }
        ],
        "tags": [
          "CustomerService"
        ]
      }
    },
    "/v1/customer-card/{card_id}": {
      "get": {
        "operationId": "CustomerService_CustomerCardByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceCustomerCardByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "card_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CustomerService"
        ]
      }
    },
    "/v1/customer-cards/{user_id}": {
      "get": {
        "operationId": "CustomerService_GetCustomerCards",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetCustomerCardsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CustomerService"
        ]
      }
    },
    "/v1/customer-details/{id}": {
      "get": {
        "operationId": "SharedService_GetCustomerByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetCustomerByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SharedService"
        ]
      }
    },
    "/v1/customer/{user_id}": {
      "get": {
        "operationId": "CustomerService_CustomerByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceCustomerByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CustomerService"
        ]
      }
    },
    "/v1/data-from-mobile/{id}": {
      "get": {
        "operationId": "SharedService_GetDataFromMobile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceDataFromMobile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SharedService"
        ]
      }
    },
    "/v1/delete-employee": {
      "delete": {
        "operationId": "UserService_DeleteEmployee",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/discount-products": {
      "get": {
        "operationId": "SharedService_ListDiscountProducts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceListDiscountProductsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "SharedService"
        ]
      },
      "delete": {
        "operationId": "SharedService_DeleteDiscountProducts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceDeleteDiscountProductsRequest"
            }
          }
        ],
        "tags": [
          "SharedService"
        ]
      },
      "post": {
        "operationId": "SharedService_InsertDiscountProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceInsertDiscountProductRequest"
            }
          }
        ],
        "tags": [
          "SharedService"
        ]
      }
    },
    "/v1/discount-products/excel": {
      "post": {
        "operationId": "SharedService_UpsertDiscountProducts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceUpsertDiscountProductsRequest"
            }
          }
        ],
        "tags": [
          "SharedService"
        ]
      }
    },
    "/v1/districts": {
      "get": {
        "operationId": "CustomerService_GetDistricts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetDistrictsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "region_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CustomerService"
        ]
      }
    },
    "/v1/drop-session": {
      "delete": {
        "summary": "This is session delete by id api",
        "description": "This is session delete by id api\n id is required in query parameters",
        "operationId": "SessionService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "sessions"
        ]
      }
    },
    "/v1/employees": {
      "get": {
        "summary": "This is for user list",
        "description": "This is for user list",
        "operationId": "UserService_EmployeeList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auth_serviceGetListUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_ids",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "branch_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "role_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/v1/exist-user": {
      "get": {
        "operationId": "CustomerService_CheckExistUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceCheckExistUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "phone_number",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pass_data",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CustomerService"
        ]
      }
    },
    "/v1/family-relations": {
      "get": {
        "operationId": "SharedService_GetFamilyRelations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetFamilyRelationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SharedService"
        ]
      }
    },
    "/v1/get-limit-for-exist-client": {
      "post": {
        "summary": "This request for get limit for exists client",
        "description": "This request for get limit for exists client",
        "operationId": "CustomerService_GetLimitForExistClient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetLimitForExistClientResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceGetLimitForExistClientRequest"
            }
          }
        ],
        "tags": [
          "CustomerService"
        ]
      }
    },
    "/v1/get-limit/{user_id}/{provider}": {
      "get": {
        "summary": "This request for get limit for exists client",
        "description": "This request for get limit for exists client",
        "operationId": "CustomerService_GetLimitByProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetCustomerLimitByProviderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CustomerService"
        ]
      }
    },
    "/v1/iman/akt/confirm": {
      "post": {
        "operationId": "ImanCustomerService_ConfirmAktByOTP",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceConfirmAktByOTPRequest"
            }
          }
        ],
        "tags": [
          "ImanCustomerService"
        ]
      }
    },
    "/v1/iman/basket": {
      "post": {
        "operationId": "ImanCustomerService_CreateBasket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceCreateBasketRequest"
            }
          }
        ],
        "tags": [
          "ImanCustomerService"
        ]
      }
    },
    "/v1/iman/customer-limit/{task_id}": {
      "get": {
        "operationId": "ImanCustomerService_GetCustomerLimit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceImanLimitResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ImanCustomerService"
        ]
      }
    },
    "/v1/iman/order": {
      "post": {
        "operationId": "ImanCustomerService_CreateOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceCreateOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceCreateOrderRequest"
            }
          }
        ],
        "tags": [
          "ImanCustomerService"
        ]
      }
    },
    "/v1/iman/order-downpayment/{order_id}": {
      "post": {
        "operationId": "ImanCustomerService_OrderDownPayment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceOrderDownPaymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ImanCustomerService"
        ]
      }
    },
    "/v1/iman/order-products/{order_id}": {
      "get": {
        "operationId": "ImanCustomerService_GetOrderProducts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetOrderProductsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ImanCustomerService"
        ]
      }
    },
    "/v1/iman/order/{order_id}": {
      "get": {
        "operationId": "ImanCustomerService_GetOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ImanCustomerService"
        ]
      }
    },
    "/v1/iman/order/{order_id}/approve": {
      "post": {
        "operationId": "ImanCustomerService_OrderApprove",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ImanCustomerService"
        ]
      }
    },
    "/v1/iman/order/{order_id}/attachments": {
      "get": {
        "operationId": "ImanCustomerService_GetAttachments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetAttachmentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ImanCustomerService"
        ]
      }
    },
    "/v1/iman/order/{order_id}/cancel": {
      "post": {
        "operationId": "ImanCustomerService_OrderCancel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ImanCustomerService"
        ]
      }
    },
    "/v1/iman/purchase-options/{user_id}": {
      "get": {
        "operationId": "ImanCustomerService_GetPurchaseOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetPurchaseOptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ImanCustomerService"
        ]
      }
    },
    "/v1/logs": {
      "get": {
        "operationId": "LogService_GetListLogs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "LogService"
        ]
      }
    },
    "/v1/myid/identification": {
      "post": {
        "summary": "This request for user identification",
        "description": "This request for user identification in my id service",
        "operationId": "MyIdService_CreateMyIDUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/user_serviceCreateMyIdUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user_serviceCreateMyIdUserRequest"
            }
          }
        ],
        "tags": [
          "MyIdService"
        ]
      }
    },
    "/v1/nasiya-calculator-for-payment": {
      "post": {
        "operationId": "ProviderService_NasiyaCalculatorForPayment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceNasiyaCalculatorForPaymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceNasiyaCalculatorRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/new-bnpl-provider-integration": {
      "post": {
        "operationId": "SharedService_CreateNewBnplProviderIntegration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceCreateNewBnplProviderIntegrationRequest"
            }
          }
        ],
        "tags": [
          "SharedService"
        ]
      }
    },
    "/v1/open/get-limit/{task_id}": {
      "get": {
        "operationId": "OpenService_GetLimit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceOpenLimitResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OpenService"
        ]
      }
    },
    "/v1/open/start-onboarding": {
      "post": {
        "operationId": "OpenService_StartOnboarding",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceStartOnboardingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceGetByUserID"
            }
          }
        ],
        "tags": [
          "OpenService"
        ]
      }
    },
    "/v1/permission": {
      "get": {
        "summary": "This is get all permission api",
        "description": "This is get all permission api",
        "operationId": "PermissionService_GetList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auth_serviceGetListPermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "role_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "for_agent",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "permissions"
        ]
      },
      "put": {
        "summary": "This is update permission api",
        "description": "This is create permission api\n read,write,update,delete must be one of following values ['yes','no']",
        "operationId": "PermissionService_Upsert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auth_serviceUpdatePermissionRequest"
            }
          }
        ],
        "tags": [
          "permissions"
        ]
      }
    },
    "/v1/permission/validate": {
      "post": {
        "summary": "This is validate permissions api",
        "description": "This is validate permissions api",
        "operationId": "PermissionService_ValidatePermissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auth_serviceValidatePermissionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auth_serviceValidatePermissionsRequest"
            }
          }
        ],
        "tags": [
          "permissions"
        ]
      }
    },
    "/v1/permission/{id}": {
      "delete": {
        "summary": "This is delete permissions api",
        "description": "This is delete permissions api",
        "operationId": "PermissionService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "permissions"
        ]
      }
    },
    "/v1/premium/cancel": {
      "post": {
        "operationId": "PremiumService_PremiumCancel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_servicePremiumCancelRequest"
            }
          }
        ],
        "tags": [
          "PremiumService"
        ]
      }
    },
    "/v1/premium/cancel-reasons": {
      "get": {
        "operationId": "PremiumService_PremiumCancelReasons",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_servicePremiumCancelReasonsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "PremiumService"
        ]
      }
    },
    "/v1/premium/graph": {
      "get": {
        "operationId": "PremiumService_PremiumGraph",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_servicePremiumResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PremiumService"
        ]
      }
    },
    "/v1/premium/oferta": {
      "get": {
        "operationId": "PremiumService_PremiumOferta",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_servicePremiumResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PremiumService"
        ]
      }
    },
    "/v1/premium/order": {
      "post": {
        "operationId": "PremiumService_PremiumOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_servicePremiumOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_servicePremiumOrderRequest"
            }
          }
        ],
        "tags": [
          "PremiumService"
        ]
      }
    },
    "/v1/premium/order/sign": {
      "post": {
        "operationId": "PremiumService_PremiumOrderSign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_servicePremiumOrderSignRequest"
            }
          }
        ],
        "tags": [
          "PremiumService"
        ]
      }
    },
    "/v1/premium/percents": {
      "get": {
        "operationId": "PremiumService_Percents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_servicePercentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "PremiumService"
        ]
      }
    },
    "/v1/premium/tilhat": {
      "get": {
        "operationId": "PremiumService_PremiumTilhat",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_servicePremiumResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "PremiumService"
        ]
      }
    },
    "/v1/provider": {
      "get": {
        "operationId": "ProviderService_GetProviders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetListProviderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "provider_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "slugs",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "check_numbers",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "post": {
        "operationId": "ProviderService_CreateProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceCreateProviderRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "put": {
        "operationId": "ProviderService_UpdateProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceBnplProvider"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/provider/check-number/product/{id}": {
      "delete": {
        "operationId": "ProviderService_DeleteOneCProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/provider/check-number/{check_number}": {
      "get": {
        "operationId": "ProviderService_CheckNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceCheckNumberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "check_number",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/provider/check-numbers": {
      "post": {
        "operationId": "ProviderService_GetPrePaymentData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetPrePaymentDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceGetPrePaymentDataRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/provider/order": {
      "post": {
        "operationId": "ProviderService_CreateInstallment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceCreateInstallmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceCreateInstallmentRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/provider/order/after-success-installment": {
      "post": {
        "operationId": "ProviderService_SendDataOneCAfterSuccessInstallment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceCreateInstallmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceSendDataOneCAfterSuccessInstallmentRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/provider/pre-checks": {
      "get": {
        "operationId": "ProviderService_GetPrechecksList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetPrechecksListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "branch_ids",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "precheck_status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search_field",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "check_number",
              "full_name",
              "client_phone_number"
            ],
            "default": "check_number"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/provider/pre-checks/{id}": {
      "get": {
        "operationId": "ProviderService_GetPrecheckDetailsByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetPrecheckDetailsByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/provider/provider-options": {
      "get": {
        "operationId": "ProviderService_GetProviderOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetProviderOptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "provider_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "slugs",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "check_numbers",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "post": {
        "summary": "This is create provider option",
        "description": "type field must be one of following values ['in_cash','in_installment']",
        "operationId": "ProviderService_CreateProviderOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceCreateProviderOptionRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "put": {
        "summary": "This is update provider option",
        "description": "type field must be one of following values ['in_cash','in_installment']",
        "operationId": "ProviderService_UpdateProviderOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceProviderOption"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/provider/provider-options/{id}": {
      "get": {
        "operationId": "ProviderService_GetProviderOptionsByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceProviderOption"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "delete": {
        "operationId": "ProviderService_DeleteProviderOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/provider/purchase-option-bonus": {
      "get": {
        "summary": "This is get provider bonuses",
        "description": "This is get provider bonuses",
        "operationId": "ProviderService_GetPurchaseOptionBonus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceListPurchaseOptionBonus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "purchase_option_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "slugs",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "post": {
        "summary": "This is create provider's bonuses",
        "description": "This is create provider's bonuses fot setting bonus for each provider.\n bonus field must be a number between 0 and 100",
        "operationId": "ProviderService_CreatePurchaseOptionBonus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_servicePurchaseOptionBonus"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "put": {
        "summary": "This is update provider bonus",
        "description": "This is update provider bonus.\n bonus field must be a number between 0 and 100",
        "operationId": "ProviderService_UpdatePurchaseOptionBonus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_servicePurchaseOptionBonus"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/provider/purchase-option-bonus/{id}": {
      "get": {
        "summary": "This is get provider bonuses by id",
        "description": "This is get provider bonuses by id",
        "operationId": "ProviderService_GetPurchaseOptionBonusByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_servicePurchaseOptionBonus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "delete": {
        "summary": "This is delete provider bonus",
        "description": "This is delete provider bonus",
        "operationId": "ProviderService_DeletePurchaseOptionBonus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/provider/purchase-options": {
      "get": {
        "operationId": "ProviderService_GetPurchaseOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGet1cPurchaseOptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "provider_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "slugs",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "check_numbers",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "post": {
        "summary": "This is create 1c purchase option",
        "description": "status field must be one of following values ['active','inactive']",
        "operationId": "ProviderService_CreatePurchaseOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceCreatePurchaseOptionRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "put": {
        "summary": "This is update 1c purchase option",
        "description": "status field must be one of following values ['active','inactive']",
        "operationId": "ProviderService_UpdatePurchaseOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_servicePurchaseOptionOneC"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/provider/purchase-options/{id}": {
      "get": {
        "operationId": "ProviderService_GetPurchaseOptionByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_servicePurchaseOptionOneC"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "delete": {
        "operationId": "ProviderService_DeletePurchaseOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/provider/update-status": {
      "post": {
        "operationId": "ProviderService_DeleteOneCInstallment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceDeleteOneCInstallmentRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/provider/{id}": {
      "get": {
        "operationId": "ProviderService_GetProviderByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceBnplProvider"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "delete": {
        "operationId": "ProviderService_DeleteProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/regions": {
      "get": {
        "operationId": "CustomerService_GetRegions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetRegionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CustomerService"
        ]
      }
    },
    "/v1/reports-filters": {
      "get": {
        "operationId": "ReportService_ReportFilters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/report_serviceReportFiltersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ReportService"
        ]
      }
    },
    "/v1/reports/branches": {
      "get": {
        "operationId": "ReportService_BranchesReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/report_serviceBranchesReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "branches",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ReportService"
        ]
      }
    },
    "/v1/reports/branches-plan": {
      "get": {
        "operationId": "ReportService_BranchPlanReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/report_serviceBranchPlanReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "branches",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ReportService"
        ]
      }
    },
    "/v1/reports/customer-installments": {
      "get": {
        "summary": "This request for getting customers installment ",
        "description": "This request for getting customers installment in Report service",
        "operationId": "ReportService_GetCustomerInstallments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/report_serviceGetCustomersInstallmentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type_of_installment",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "provider_slugs",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "agent_ids",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "branch_ids",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ReportService"
        ]
      }
    },
    "/v1/reports/customer-limits": {
      "get": {
        "summary": "This request for user which get limit successfully",
        "description": "This request for user which get limit successfully in Report service",
        "operationId": "ReportService_GetCustomerLimits",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/report_serviceGetCustomersLimitResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type_of_installment",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "provider_slugs",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "agent_ids",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "branch_ids",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ReportService"
        ]
      }
    },
    "/v1/reports/dashboard": {
      "get": {
        "operationId": "ReportService_Dashboard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/report_serviceDashboardResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "branch_ids",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "providers",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ReportService"
        ]
      }
    },
    "/v1/reports/employees-plan": {
      "get": {
        "operationId": "ReportService_EmployeesPlanReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/report_serviceEmployeesPlanReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "branches",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ReportService"
        ]
      }
    },
    "/v1/reports/excel/agents": {
      "get": {
        "operationId": "ReportService_AgentsInExcel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/report_serviceInstallmentsInExcelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type_of_installment",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "provider_slugs",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "agent_ids",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "branch_ids",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ReportService"
        ]
      }
    },
    "/v1/reports/excel/branch-plans": {
      "get": {
        "operationId": "ReportService_BranchesPlanExcel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/report_serviceInstallmentsInExcelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "branches",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ReportService"
        ]
      }
    },
    "/v1/reports/excel/branches": {
      "get": {
        "operationId": "ReportService_BranchesExcel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/report_serviceInstallmentsInExcelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "branches",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ReportService"
        ]
      }
    },
    "/v1/reports/excel/employees-plans": {
      "get": {
        "operationId": "ReportService_EmployeesPlanExcel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/report_serviceInstallmentsInExcelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "branches",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ReportService"
        ]
      }
    },
    "/v1/reports/excel/installements": {
      "get": {
        "operationId": "ReportService_InstallmentsInExcel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/report_serviceInstallmentsInExcelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type_of_installment",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "provider_slugs",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "agent_ids",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "branch_ids",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ReportService"
        ]
      }
    },
    "/v1/reports/indentified-customers": {
      "get": {
        "summary": "This request for getting indentified customers list",
        "description": "This request for getting indentified customers list in Report service",
        "operationId": "ReportService_GetIdentifiedCustomers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/report_serviceGetIdentifiedCustomersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type_of_installment",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "provider_slugs",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "agent_ids",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "branch_ids",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ReportService"
        ]
      }
    },
    "/v1/role": {
      "get": {
        "summary": "This is get all role api",
        "description": "This is get all role api",
        "operationId": "RoleService_GetList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auth_serviceGetListRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "role_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "for_agent",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "roles"
        ]
      },
      "post": {
        "summary": "This is create role api",
        "description": "This is create role api",
        "operationId": "RoleService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auth_serviceAuthIdInt"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auth_serviceRole"
            }
          }
        ],
        "tags": [
          "roles"
        ]
      },
      "put": {
        "summary": "This is update role api",
        "description": "This is create role api",
        "operationId": "RoleService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auth_serviceUpdateRole"
            }
          }
        ],
        "tags": [
          "roles"
        ]
      }
    },
    "/v1/role/{id}": {
      "get": {
        "summary": "This is get by id role api",
        "description": "This is get by id role api",
        "operationId": "RoleService_GetById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auth_serviceRole"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "roles"
        ]
      }
    },
    "/v1/send-code": {
      "post": {
        "summary": "This request for sending otp code",
        "description": "This request for sending otp code",
        "operationId": "SmsService_Send",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sms_serviceSendSmsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sms_serviceSendSmsRequest"
            }
          }
        ],
        "tags": [
          "SmsService"
        ]
      }
    },
    "/v1/send-product/chat": {
      "post": {
        "summary": "This request for sending product",
        "description": "This request for sending product",
        "operationId": "SmsService_SendToTelegam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sms_serviceTelegramSendRequest"
            }
          }
        ],
        "tags": [
          "SmsService"
        ]
      }
    },
    "/v1/session": {
      "get": {
        "summary": "This is get all session api",
        "description": "This is get all session api",
        "operationId": "SessionService_GetList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auth_serviceGetListSessionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "role_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "for_agent",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "sessions"
        ]
      }
    },
    "/v1/tbc/accept-order": {
      "post": {
        "summary": "This request for tbc accept order",
        "description": "This request for tbc accept order in Provider service.",
        "operationId": "TBCService_AcceptOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceAcceptOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceAcceptOrderRequest"
            }
          }
        ],
        "tags": [
          "TBCService"
        ]
      }
    },
    "/v1/tbc/agent-recomendation": {
      "get": {
        "summary": "This request for tbc agent recomendation",
        "description": "This request for tbc agent recomendatation in Provider service.",
        "operationId": "TBCService_GetAgentRecomendation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetListTbcInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "TBCService"
        ]
      }
    },
    "/v1/tbc/agents": {
      "get": {
        "summary": "This request for tbc agents",
        "description": "This request for tbc agents in Provider service.",
        "operationId": "TBCService_GetAgents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetListTbcInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TBCService"
        ]
      }
    },
    "/v1/tbc/approve-order": {
      "post": {
        "summary": "This request for tbc approve order",
        "description": "This request for tbc approve order in Provider service.",
        "operationId": "TBCService_ApproveOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceApproveOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceApproveOrderRequest"
            }
          }
        ],
        "tags": [
          "TBCService"
        ]
      }
    },
    "/v1/tbc/cancel-order": {
      "post": {
        "summary": "This request for tbc cancel order",
        "description": "This request for tbc cancel order in Provider service.",
        "operationId": "TBCService_CancelOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceCancelOrderRequest"
            }
          }
        ],
        "tags": [
          "TBCService"
        ]
      }
    },
    "/v1/tbc/cancel-reasons": {
      "get": {
        "summary": "This request for tbc cancel reasons",
        "description": "This request for tbc cancel reasons in Provider service.",
        "operationId": "TBCService_GetCancelReasons",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetListTbcInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "TBCService"
        ]
      }
    },
    "/v1/tbc/create-order": {
      "post": {
        "summary": "This request for tbc create order",
        "description": "This request for tbc create order in Provider service.",
        "operationId": "TBCService_CreateOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceCreateTbcOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceCreateTbcOrderRequest"
            }
          }
        ],
        "tags": [
          "TBCService"
        ]
      }
    },
    "/v1/tbc/docs/{order_id}": {
      "get": {
        "summary": "This request for tbc get docs",
        "description": "This request for tbc get docs in Provider service.",
        "operationId": "TBCService_GetLoanDocs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetLoanDocResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TBCService"
        ]
      }
    },
    "/v1/tbc/get-approximate-prices": {
      "get": {
        "summary": "This request for tbc approximate price",
        "description": "This request for tbc approximate price in Provider service.",
        "operationId": "TBCService_GetApproximatePrices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetListTbcInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "TBCService"
        ]
      }
    },
    "/v1/tbc/get-preliminary-categories": {
      "get": {
        "summary": "This request for tbc preliminary categories",
        "description": "This request for tbc preliminary categories in Provider service.",
        "operationId": "TBCService_GetPreliminaryCategories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetListTbcInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "TBCService"
        ]
      }
    },
    "/v1/tbc/merchant-branches": {
      "get": {
        "summary": "This request for tbc merchant branches",
        "description": "This request for tbc merchant branches in Provider service.",
        "operationId": "TBCService_GetMerchantBranches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetListTbcInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TBCService"
        ]
      }
    },
    "/v1/tbc/offers/{order_id}": {
      "get": {
        "summary": "This request for tbc get offers",
        "description": "This request for tbc get offers in Provider service.",
        "operationId": "TBCService_GetOffers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetOfferResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TBCService"
        ]
      }
    },
    "/v1/tbc/products-category": {
      "get": {
        "summary": "This request for tbc products category",
        "description": "This request for tbc products category in Provider service.",
        "operationId": "TBCService_GetProductsCategory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetListTbcInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TBCService"
        ]
      }
    },
    "/v1/tbc/sign-order": {
      "post": {
        "summary": "This request for tbc approve order",
        "description": "This request for tbc approve order in Provider service.",
        "operationId": "TBCService_SignOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceSignOrderRequest"
            }
          }
        ],
        "tags": [
          "TBCService"
        ]
      }
    },
    "/v1/update-customer-card": {
      "put": {
        "operationId": "CustomerService_UpdateCustomerCard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceUpdateCustomerCardRequest"
            }
          }
        ],
        "tags": [
          "CustomerService"
        ]
      }
    },
    "/v1/update-employee": {
      "put": {
        "operationId": "UserService_UpdateEmployee",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "phone_number",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "full_name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "agent_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "branch_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "created_at",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "updated_at",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deleted_at",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "role_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/update-phone": {
      "put": {
        "operationId": "CustomerService_UpdatePhone",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phone",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CustomerService"
        ]
      }
    },
    "/v1/user": {
      "get": {
        "summary": "This is for user list",
        "description": "This is for user list",
        "operationId": "UserService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auth_serviceGetListUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_ids",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "branch_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "role_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "users"
        ]
      },
      "post": {
        "summary": "This is for user create",
        "description": "This is for user create",
        "operationId": "UserService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auth_serviceAuthIdString"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auth_serviceUser"
            }
          }
        ],
        "tags": [
          "users"
        ]
      },
      "put": {
        "summary": "This is for user update. \n user_status should be one of the following values [active|pending|inactive|blocked]",
        "description": "This is for user update.\n user_status should be one of the following values [active|pending|inactive|blocked]",
        "operationId": "UserService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auth_serviceUpdateUser"
            }
          }
        ],
        "tags": [
          "users"
        ]
      },
      "patch": {
        "summary": "This is for user update",
        "description": "This is for user update",
        "operationId": "UserService_UpdateStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auth_serviceUpdateUserStatus"
            }
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/v1/user-hard-delete/{id}": {
      "delete": {
        "operationId": "UserService_HardDelete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/user/data": {
      "get": {
        "summary": "This is for get user data",
        "description": "This is for get user data",
        "operationId": "UserService_GetUserData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auth_serviceUserData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/v1/user/pending-agents": {
      "get": {
        "summary": "This is for list of pending agents",
        "description": "This is for list of pending agents",
        "operationId": "UserService_ListPendingAgents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auth_serviceGetListUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_ids",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "branch_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "role_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/v1/user/start-button": {
      "post": {
        "summary": "This request for update user start button by user id",
        "description": "This request for update user start button by user id in Provider service",
        "operationId": "CustomerService_PushStartButton",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceGetByID"
            }
          }
        ],
        "tags": [
          "CustomerService"
        ]
      }
    },
    "/v1/user/{id}": {
      "get": {
        "summary": "This is for user get by id",
        "description": "This is for user get by id",
        "operationId": "UserService_GetById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auth_serviceUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "users"
        ]
      },
      "delete": {
        "summary": "This is for user delete",
        "description": "This is for user delete",
        "operationId": "UserService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/v1/user/{id}/documents": {
      "get": {
        "operationId": "CustomerService_GetCustomerDocuments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetCustomerDocumentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CustomerService"
        ]
      }
    },
    "/v1/variant/add-agent": {
      "post": {
        "operationId": "VariantService_UpsertAgentToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceUpsertAgentTokenRequest"
            }
          }
        ],
        "tags": [
          "VariantService"
        ]
      }
    },
    "/v1/variant/cancel-types": {
      "get": {
        "operationId": "VariantService_CancelTypes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceCancelTypesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "VariantService"
        ]
      }
    },
    "/v1/variant/categories": {
      "get": {
        "operationId": "VariantService_Categories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceCategoriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VariantService"
        ]
      }
    },
    "/v1/variant/contract-pdf": {
      "get": {
        "operationId": "VariantService_GetAppPDF",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetAppPDFResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VariantService"
        ]
      }
    },
    "/v1/variant/order": {
      "post": {
        "operationId": "VariantService_VariantOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceVariantOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceVariantOrderRequest"
            }
          }
        ],
        "tags": [
          "VariantService"
        ]
      }
    },
    "/v1/variant/order/cancel": {
      "post": {
        "operationId": "VariantService_CancelApp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceCancelRequest"
            }
          }
        ],
        "tags": [
          "VariantService"
        ]
      }
    },
    "/v1/variant/order/sign/{user_id}": {
      "post": {
        "operationId": "VariantService_Sign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceVariantOrderSignResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "order_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VariantService"
        ]
      }
    },
    "/v1/variant/products": {
      "get": {
        "operationId": "VariantService_GetProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetProductResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sku",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VariantService"
        ]
      }
    },
    "/v1/verify": {
      "post": {
        "operationId": "CompreFaceService_Verify",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/compreface_serviceVerifyResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/compreface_serviceVerifyReq"
            }
          }
        ],
        "tags": [
          "CompreFaceService"
        ]
      }
    },
    "/v1/verify-base64": {
      "post": {
        "operationId": "CompreFaceService_VerifyBase64",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/compreface_serviceVerifyResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/compreface_serviceVerifyReq"
            }
          }
        ],
        "tags": [
          "CompreFaceService"
        ]
      }
    },
    "/v2/add-card": {
      "post": {
        "operationId": "CustomerService_AddCardV2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceRegisterCardResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceRegisterCardRequest"
            }
          }
        ],
        "tags": [
          "CustomerService"
        ]
      }
    },
    "/v2/alif/application": {
      "post": {
        "operationId": "AlifService_CreateApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceCreateApplicationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceCreateApplicationRequest"
            }
          }
        ],
        "tags": [
          "AlifService"
        ]
      }
    },
    "/v2/alif/application-otp/{order_id}": {
      "post": {
        "operationId": "AlifService_ApplicationOtp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceApplicationOtpResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AlifService"
        ]
      }
    },
    "/v2/alif/application/{order_id}": {
      "get": {
        "operationId": "AlifService_GetApplicationByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetApplicationByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AlifService"
        ]
      }
    },
    "/v2/alif/cancel-application": {
      "post": {
        "operationId": "AlifService_CancelApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceCancelApplicationRequest"
            }
          }
        ],
        "tags": [
          "AlifService"
        ]
      }
    },
    "/v2/alif/check-order-status/{order_id}": {
      "get": {
        "operationId": "AlifService_CheckOrderStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceCheckOrderStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AlifService"
        ]
      }
    },
    "/v2/alif/conditions": {
      "get": {
        "operationId": "AlifService_GetConditions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetConditionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "task_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AlifService"
        ]
      }
    },
    "/v2/alif/generate-contract/{order_id}": {
      "post": {
        "operationId": "AlifService_GenerateContract",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGenerateContractResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AlifService"
        ]
      }
    },
    "/v2/alif/get-limit/{task_id}": {
      "get": {
        "operationId": "AlifService_GetLimitV2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceGetLimitV2Response"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AlifService"
        ]
      }
    },
    "/v2/alif/scoring": {
      "post": {
        "operationId": "AlifService_Scoring",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceScoringResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "task_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AlifService"
        ]
      }
    },
    "/v2/alif/store": {
      "post": {
        "operationId": "AlifService_CreateStore",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceOrderID"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceCreateStoreRequest"
            }
          }
        ],
        "tags": [
          "AlifService"
        ]
      }
    },
    "/v2/customer": {
      "post": {
        "operationId": "CustomerService_RegisterCustomerV2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceBrokerEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceRegisterCustomerRequestV2"
            }
          }
        ],
        "tags": [
          "CustomerService"
        ]
      }
    },
    "/v2/iman/cancel-limit": {
      "post": {
        "summary": "This request for iman cancel limit",
        "description": "This request for iman cancel limit in Provider service",
        "operationId": "ImanCustomerService_CancelLimit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceTaskID"
            }
          }
        ],
        "tags": [
          "ImanCustomerService"
        ]
      }
    },
    "/v2/iman/check-order-status/{order_id}": {
      "get": {
        "operationId": "ImanCustomerService_CheckOrderStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceCheckOrderStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ImanCustomerService"
        ]
      }
    },
    "/v2/iman/order": {
      "post": {
        "operationId": "ImanCustomerService_CreateOrderV2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceCreateOrderV2Response"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceCreateOrderRequest"
            }
          }
        ],
        "tags": [
          "ImanCustomerService"
        ]
      }
    },
    "/v2/iman/start-onboarding": {
      "post": {
        "summary": "This request for iman start onbarding",
        "description": "This request for iman start onbarding in Provider service",
        "operationId": "ImanCustomerService_StartOnboarding",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceGetByUserID"
            }
          }
        ],
        "tags": [
          "ImanCustomerService"
        ]
      }
    },
    "/v2/nasiya-calculator-for-payment": {
      "post": {
        "operationId": "ProviderService_NasiyaCalculatorForPaymentV2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceNasiyaCalculatorForPaymentV2Response"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceNasiyaCalculatorV2Request"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v2/provider/order": {
      "post": {
        "operationId": "ProviderService_CreateInstallmentV2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceCreateInstallmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceCreateInstallmentRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v2/provider/retry": {
      "post": {
        "summary": "This request for retry integration by task id",
        "description": "This request for retry integration by task id in Provider service",
        "operationId": "CustomerService_Retry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceTaskID"
            }
          }
        ],
        "tags": [
          "CustomerService"
        ]
      }
    },
    "/v2/resend-otp": {
      "post": {
        "operationId": "CustomerService_ResendOTPV2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceRegisterCardResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceRegisterCardRequest"
            }
          }
        ],
        "tags": [
          "CustomerService"
        ]
      }
    },
    "/v2/status/{provider}/{user_id}": {
      "get": {
        "summary": "This request for provider status by user id",
        "description": "This request for provider status by user id in Provider service",
        "operationId": "CustomerService_GetStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceProviderStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CustomerService"
        ]
      }
    },
    "/v2/tbc/check-order-status/{order_id}": {
      "get": {
        "operationId": "TBCService_CheckOrderStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceCheckOrderStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TBCService"
        ]
      }
    },
    "/v2/tbc/get-limit/{task_id}": {
      "get": {
        "summary": "This request for tbc get limit",
        "description": "This request for tbc get limit in Provider service.",
        "operationId": "TBCService_GetLimit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceTbcLimitResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TBCService"
        ]
      }
    },
    "/v2/variant/get-limit/{task_id}": {
      "get": {
        "summary": "This request for variant get limit",
        "description": "This request for variant get limit in Provider service.",
        "operationId": "VariantService_GetLimit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customer_serviceVariantLimitResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "VariantService"
        ]
      }
    },
    "/v2/variant/start-onboarding": {
      "post": {
        "operationId": "VariantService_StartOnboarding",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer_serviceGetByUserID"
            }
          }
        ],
        "tags": [
          "VariantService"
        ]
      }
    }
  },
  "definitions": {
    "AlifServiceApplicationsCancelBody": {
      "type": "object",
      "properties": {
        "cancel_reason": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "auth_serviceAuthIdInt": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "auth_serviceAuthIdString": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "auth_serviceCheckPermissionResponse": {
      "type": "object",
      "properties": {
        "alif_login": {
          "type": "string"
        },
        "alif_password": {
          "type": "string"
        },
        "variant_login": {
          "type": "string"
        },
        "variant_password": {
          "type": "string"
        }
      }
    },
    "auth_serviceGetListInMapUserResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/auth_serviceUser"
          }
        }
      }
    },
    "auth_serviceGetListPermissionResponse": {
      "type": "object",
      "properties": {
        "frontend_permission": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/auth_servicePermission"
          }
        },
        "backend_permission": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/auth_servicePermission"
          }
        },
        "count_frontend_permission": {
          "type": "integer",
          "format": "int32"
        },
        "count_backend_permission": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "auth_serviceGetListRoleResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/auth_serviceRole"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "auth_serviceGetListSessionResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/auth_serviceSession"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "auth_serviceGetListUserResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/auth_serviceUser"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "auth_serviceLoginRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "platform": {
          "$ref": "#/definitions/auth_servicePlatform"
        },
        "email": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "hashed_token": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "two_factor_auth_token": {
          "type": "string"
        }
      }
    },
    "auth_serviceLoginResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/auth_serviceUserInfo"
        },
        "token": {
          "$ref": "#/definitions/auth_serviceToken"
        },
        "two_factor_auth_token": {
          "type": "string"
        },
        "sessions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/auth_serviceSession"
          }
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/auth_servicePermission"
          }
        }
      }
    },
    "auth_servicePermission": {
      "type": "object",
      "properties": {
        "permission_id": {
          "type": "string"
        },
        "api_path": {
          "type": "string"
        },
        "read": {
          "type": "string"
        },
        "write": {
          "type": "string"
        },
        "update": {
          "type": "string"
        },
        "delete": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "auth_servicePlatform": {
      "type": "string",
      "enum": [
        "mobile",
        "web"
      ],
      "default": "mobile"
    },
    "auth_serviceRefreshTokenRequest": {
      "type": "object",
      "properties": {
        "refresh_token": {
          "type": "string"
        }
      }
    },
    "auth_serviceRefreshTokenRespone": {
      "type": "object",
      "properties": {
        "token": {
          "$ref": "#/definitions/auth_serviceToken"
        }
      }
    },
    "auth_serviceRole": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "autogenerated_username": {
          "type": "boolean"
        }
      }
    },
    "auth_serviceSendVerificationCodeRequest": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string"
        },
        "auth_type": {
          "type": "string"
        }
      }
    },
    "auth_serviceSession": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "ip_address": {
          "type": "string"
        },
        "user_agent": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "readOnly": true
        },
        "expires_at": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "auth_serviceSignUpRequest": {
      "type": "object",
      "properties": {
        "phone_number": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "agent_id": {
          "type": "string"
        },
        "tbc_agent_id": {
          "type": "string"
        },
        "tbc_merchant_branch_id": {
          "type": "string"
        },
        "branch_id": {
          "type": "string"
        },
        "alif_login": {
          "type": "string"
        },
        "alif_password": {
          "type": "string"
        },
        "variant_login": {
          "type": "string"
        },
        "variant_password": {
          "type": "string"
        }
      }
    },
    "auth_serviceSignUpResponse": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        }
      }
    },
    "auth_serviceToken": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        },
        "access_expires_at": {
          "type": "integer",
          "format": "int32"
        },
        "refresh_expires_at": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "auth_serviceUpdatePermissionRequest": {
      "type": "object",
      "properties": {
        "frontend_permission": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/auth_servicePermission"
          }
        },
        "backend_permission": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/auth_servicePermission"
          }
        },
        "role_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "auth_serviceUpdateRole": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "auth_serviceUpdateUser": {
      "type": "object",
      "properties": {
        "phone_number": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "user_status": {
          "type": "string"
        },
        "agent_id": {
          "type": "string"
        },
        "tbc_agent_id": {
          "type": "string"
        },
        "tbc_merchant_branch_id": {
          "type": "string"
        },
        "branch_id": {
          "type": "string"
        },
        "role_id": {
          "type": "integer",
          "format": "int32"
        },
        "alif_login": {
          "type": "string"
        },
        "alif_password": {
          "type": "string"
        },
        "variant_login": {
          "type": "string"
        },
        "variant_password": {
          "type": "string"
        },
        "start_date": {
          "type": "string"
        },
        "end_date": {
          "type": "string"
        }
      }
    },
    "auth_serviceUpdateUserStatus": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "user_status": {
          "type": "string"
        }
      }
    },
    "auth_serviceUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "username": {
          "type": "string"
        },
        "user_status": {
          "type": "string",
          "readOnly": true
        },
        "phone_number": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "readOnly": true
        },
        "role_id": {
          "type": "integer",
          "format": "int32"
        },
        "agent_id": {
          "type": "string"
        },
        "tbc_agent_id": {
          "type": "string"
        },
        "tbc_merchant_branch_id": {
          "type": "string"
        },
        "branch_id": {
          "type": "string"
        },
        "alif_login": {
          "type": "string"
        },
        "alif_password": {
          "type": "string"
        },
        "variant_login": {
          "type": "string"
        },
        "variant_password": {
          "type": "string"
        },
        "start_date": {
          "type": "string"
        },
        "end_date": {
          "type": "string"
        }
      }
    },
    "auth_serviceUserData": {
      "type": "object",
      "properties": {
        "alif_login_status": {
          "type": "string"
        },
        "variant_login_status": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/auth_serviceUserInfo"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/auth_servicePermission"
          }
        },
        "sessions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/auth_serviceSession"
          }
        }
      }
    },
    "auth_serviceUserInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "username": {
          "type": "string"
        },
        "user_status": {
          "type": "string",
          "readOnly": true
        },
        "phone_number": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "readOnly": true
        },
        "role_id": {
          "type": "integer",
          "format": "int32"
        },
        "agent_id": {
          "type": "string"
        },
        "tbc_agent_id": {
          "type": "string"
        },
        "tbc_merchant_branch_id": {
          "type": "string"
        },
        "branch_id": {
          "type": "string"
        }
      }
    },
    "auth_serviceValidatePermissionsRequest": {
      "type": "object",
      "properties": {
        "api_path": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "role_id": {
          "type": "string"
        }
      }
    },
    "auth_serviceValidatePermissionsResponse": {
      "type": "object",
      "properties": {
        "is_valid": {
          "type": "boolean"
        }
      }
    },
    "compreface_serviceResult": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "information": {
          "type": "string"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "compreface_serviceVerifyReq": {
      "type": "object",
      "properties": {
        "source_image": {
          "type": "string"
        },
        "target_image": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        }
      }
    },
    "compreface_serviceVerifyResp": {
      "type": "object",
      "properties": {
        "similarity": {
          "type": "number",
          "format": "float"
        },
        "result": {
          "$ref": "#/definitions/compreface_serviceResult"
        }
      }
    },
    "customer_serviceAcceptOrderRequest": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string"
        },
        "offer_id": {
          "type": "string"
        }
      }
    },
    "customer_serviceAcceptOrderResponse": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string"
        },
        "file_url": {
          "type": "string"
        },
        "otp_id": {
          "type": "string"
        }
      }
    },
    "customer_serviceActivityAreas": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "body": {
          "$ref": "#/definitions/customer_serviceActivityBody"
        }
      }
    },
    "customer_serviceActivityBody": {
      "type": "object",
      "properties": {
        "uz": {
          "type": "string"
        },
        "ru": {
          "type": "string"
        }
      }
    },
    "customer_serviceAdditionalContact": {
      "type": "object",
      "properties": {
        "relationship": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        }
      }
    },
    "customer_serviceAgentPlans": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "agent_id": {
          "type": "string"
        },
        "plan": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "customer_serviceAgreementByIdResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "middle_name": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "total_amount": {
          "type": "number",
          "format": "double"
        },
        "downpayment_amount": {
          "type": "number",
          "format": "double"
        },
        "monthly_amount": {
          "type": "number",
          "format": "double"
        },
        "provider_purchase_option": {
          "type": "number",
          "format": "double"
        },
        "ws_path": {
          "type": "string"
        },
        "agent_recomendation_id": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceProducts"
          }
        },
        "base_amount": {
          "type": "number",
          "format": "double"
        },
        "first_payment_date": {
          "type": "string"
        },
        "agent_id": {
          "type": "string"
        },
        "total_amount_1c": {
          "type": "number",
          "format": "double"
        },
        "from_1c_payment": {
          "type": "boolean"
        },
        "cash_number": {
          "type": "string"
        },
        "contract_link": {
          "type": "string"
        },
        "provider_order_id": {
          "type": "string"
        },
        "cancel_reason": {
          "type": "string"
        },
        "prepayment_type": {
          "type": "string"
        },
        "cash_downpayment": {
          "type": "number",
          "format": "double"
        },
        "comments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceApplicationComments"
          }
        },
        "filename": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        }
      }
    },
    "customer_serviceAgreements": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "middle_name": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "total_amount": {
          "type": "number",
          "format": "double"
        },
        "base_amount": {
          "type": "number",
          "format": "double"
        },
        "user_id": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "agent_name": {
          "type": "string"
        },
        "agent_id": {
          "type": "string"
        },
        "total_amount_1c": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "customer_serviceAgreementsResponse": {
      "type": "object",
      "properties": {
        "agreements": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceAgreements"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "sum": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "customer_serviceAlifEventResponse": {
      "type": "object",
      "properties": {
        "ws_path": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "client_status": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        }
      }
    },
    "customer_serviceAlifLimitResponse": {
      "type": "object",
      "properties": {
        "current_amount": {
          "type": "integer",
          "format": "int32"
        },
        "total_spent_limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceAnorLimit": {
      "type": "object",
      "properties": {
        "period_month": {
          "type": "string"
        },
        "amount_limit": {
          "type": "string"
        },
        "action_id": {
          "type": "string"
        }
      }
    },
    "customer_serviceAnorLimitResponse": {
      "type": "object",
      "properties": {
        "customer_limits": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceAnorLimit"
          }
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "customer_serviceApplicationByIdResponse": {
      "type": "object",
      "properties": {
        "total_amount": {
          "type": "number",
          "format": "double"
        },
        "down_payment_amount": {
          "type": "number",
          "format": "double"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        },
        "monthly_amount": {
          "type": "number",
          "format": "double"
        },
        "base_amount": {
          "type": "number",
          "format": "double"
        },
        "contract": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "customer_serviceApplicationCancelResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "customer_serviceApplicationComments": {
      "type": "object",
      "properties": {
        "body": {
          "type": "string"
        },
        "created_by_str": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        }
      }
    },
    "customer_serviceApplicationConditions": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        },
        "commission": {
          "type": "integer",
          "format": "int32"
        },
        "discount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceApplicationConditionsResponse": {
      "type": "object",
      "properties": {
        "application_conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceApplicationConditions"
          }
        }
      }
    },
    "customer_serviceApplicationConfirmRequest": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceApplicationOtpResponse": {
      "type": "object",
      "properties": {
        "expire_time": {
          "type": "string"
        }
      }
    },
    "customer_serviceApplicationStoreFullRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "condition_id": {
          "type": "integer",
          "format": "int32"
        },
        "commission": {
          "type": "integer",
          "format": "int32"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        },
        "prepayment": {
          "type": "number",
          "format": "double"
        },
        "first_payment_date": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceItems"
          }
        }
      }
    },
    "customer_serviceApplicationStoreFullResponse": {
      "type": "object",
      "properties": {
        "ws_path": {
          "type": "string"
        },
        "order_id": {
          "type": "string"
        },
        "app_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceApplicationsAlifshopResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceData"
          }
        },
        "meta": {
          "$ref": "#/definitions/customer_serviceMeta"
        }
      }
    },
    "customer_serviceApplicationsResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "customer_serviceApproveOrderRequest": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string"
        },
        "otp_id": {
          "type": "string"
        },
        "otp": {
          "type": "string"
        }
      }
    },
    "customer_serviceApproveOrderResponse": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "customer_serviceBasketProduct": {
      "type": "object",
      "properties": {
        "barcode": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "mark_kiz": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "spic": {
          "type": "string"
        },
        "merchant_product_id": {
          "type": "string"
        },
        "price": {
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "order_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceBnplProvider": {
      "type": "object",
      "properties": {
        "slug": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "dark_logo": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "dynamic_percent": {
          "type": "boolean"
        },
        "min": {
          "type": "integer",
          "format": "int32"
        },
        "max": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "customer_serviceBranch": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "mp_1c_id": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "customer_serviceBranchPlan": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "branch_id": {
          "type": "string"
        },
        "date_from": {
          "type": "string"
        },
        "date_to": {
          "type": "string"
        },
        "plan": {
          "type": "number",
          "format": "double"
        },
        "agent_plans": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceAgentPlans"
          }
        }
      }
    },
    "customer_serviceBrokerEventResponse": {
      "type": "object",
      "properties": {
        "alif": {
          "$ref": "#/definitions/customer_serviceAlifEventResponse"
        },
        "iman": {
          "$ref": "#/definitions/customer_serviceImanEventResponse"
        }
      }
    },
    "customer_serviceCancelApplicationRequest": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string"
        },
        "cancel_reason_key": {
          "type": "string"
        }
      }
    },
    "customer_serviceCancelOneCPaymentRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "customer_serviceCancelOrderRequest": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string"
        },
        "cancel_reason_id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
    },
    "customer_serviceCancelRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "reason_id": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "order_id": {
          "type": "string"
        }
      }
    },
    "customer_serviceCancelSuccessfullOrderRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "cancel_reason_id": {
          "type": "string"
        }
      }
    },
    "customer_serviceCancelType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "customer_serviceCancelTypesResponse": {
      "type": "object",
      "properties": {
        "cancel_types": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceCancelType"
          }
        }
      }
    },
    "customer_serviceCategoriesResponse": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceCategory"
          }
        }
      }
    },
    "customer_serviceCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "customer_serviceCheckActiveAgreementResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "middle_name": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "total_amount": {
          "type": "number",
          "format": "double"
        },
        "downpayment_amount": {
          "type": "number",
          "format": "double"
        },
        "monthly_amount": {
          "type": "number",
          "format": "double"
        },
        "provider_purchase_option": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "customer_serviceCheckExistUserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "boolean"
        }
      }
    },
    "customer_serviceCheckNumberResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "branch_id": {
          "type": "string"
        },
        "base_amount": {
          "type": "number",
          "format": "double"
        },
        "identification_id": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceProviderProduct"
          }
        },
        "check_number": {
          "type": "string"
        },
        "temp_check_number": {
          "type": "string"
        }
      }
    },
    "customer_serviceCheckOrderStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "customer_serviceCheckProductsRemainderParams": {
      "type": "object",
      "properties": {
        "total_amount": {
          "type": "number",
          "format": "double"
        },
        "base_amount": {
          "type": "number",
          "format": "double"
        },
        "monthly_amount": {
          "type": "number",
          "format": "double"
        },
        "id": {
          "type": "string"
        },
        "commission": {
          "type": "number",
          "format": "double"
        },
        "type": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "total_amount_1c": {
          "type": "number",
          "format": "double"
        },
        "provider": {
          "type": "string"
        },
        "prepayment": {
          "type": "number",
          "format": "double"
        },
        "prepayment_type": {
          "type": "string"
        }
      }
    },
    "customer_serviceCheckProductsRemainderRequest": {
      "type": "object",
      "properties": {
        "check_numbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "slug": {
          "type": "string"
        },
        "purchase_option_id": {
          "type": "string"
        },
        "prepayment": {
          "type": "number",
          "format": "double"
        },
        "percent": {
          "type": "number",
          "format": "double"
        },
        "prepayment_product_id": {
          "type": "string"
        },
        "prepayment_type": {
          "type": "string"
        },
        "product_markings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceProductMarkings"
          }
        }
      }
    },
    "customer_serviceCheckProductsRemainderResponse": {
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "#/definitions/customer_serviceCheckProductsRemainderParams"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceProductWithDiscount"
          }
        }
      }
    },
    "customer_serviceConfirmAktByOTPRequest": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string"
        },
        "otp_code": {
          "type": "string"
        }
      }
    },
    "customer_serviceConfirmCustomerCardRequest": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "provider_card_id": {
          "type": "string"
        },
        "card_id": {
          "type": "string"
        },
        "otp_id": {
          "type": "string"
        }
      }
    },
    "customer_serviceConfirmCustomerCardResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "ws_path": {
          "type": "string"
        }
      }
    },
    "customer_serviceCreateApplicationRequest": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceCreateApplicationResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "customer_serviceCreateBasketRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceBasketProduct"
          }
        }
      }
    },
    "customer_serviceCreateBranchRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "mp_1c_id": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "customer_serviceCreateClientResponse": {
      "type": "object",
      "properties": {
        "task_id": {
          "type": "string"
        },
        "client_status": {
          "type": "string"
        },
        "ws_path": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "customer_serviceCreateCustomerCardRequest": {
      "type": "object",
      "properties": {
        "customer_id": {
          "type": "string"
        },
        "card_number": {
          "type": "string"
        },
        "card_expired_at": {
          "type": "string"
        },
        "card_type": {
          "type": "string"
        }
      }
    },
    "customer_serviceCreateCustomerCardResponse": {
      "type": "object",
      "properties": {
        "card_id": {
          "type": "string"
        }
      }
    },
    "customer_serviceCreateInstallmentRequest": {
      "type": "object",
      "properties": {
        "purchase_option_id": {
          "type": "string"
        },
        "check_numbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "full_name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "prepayment": {
          "type": "number",
          "format": "double"
        },
        "percent": {
          "type": "number",
          "format": "double"
        },
        "prepayment_type": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "prepayment_product_id": {
          "type": "string"
        }
      }
    },
    "customer_serviceCreateInstallmentResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "result": {
          "$ref": "#/definitions/customer_serviceResult"
        }
      }
    },
    "customer_serviceCreateNewBnplProviderIntegrationRequest": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string"
        }
      }
    },
    "customer_serviceCreateOrderRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "period_in_month": {
          "type": "integer",
          "format": "int32"
        },
        "total_amount": {
          "type": "number",
          "format": "double"
        },
        "downpayment_amount": {
          "type": "number",
          "format": "double"
        },
        "monthly_amount": {
          "type": "number",
          "format": "double"
        },
        "first_payment_date": {
          "type": "string"
        }
      }
    },
    "customer_serviceCreateOrderResponse": {
      "type": "object",
      "properties": {
        "ws_path": {
          "type": "string"
        },
        "task_id": {
          "type": "string"
        },
        "contract_number": {
          "type": "string"
        },
        "order_id": {
          "type": "string"
        }
      }
    },
    "customer_serviceCreateOrderV2Response": {
      "type": "object",
      "properties": {
        "contract_number": {
          "type": "string"
        },
        "order_id": {
          "type": "string"
        }
      }
    },
    "customer_serviceCreateProviderOptionRequest": {
      "type": "object",
      "properties": {
        "provider_id": {
          "type": "string"
        },
        "purchase_options_1c_id": {
          "type": "string"
        },
        "commission": {
          "type": "number",
          "format": "double"
        },
        "type": {
          "type": "string"
        },
        "bonus": {
          "type": "number",
          "format": "double"
        },
        "date_from": {
          "type": "string"
        },
        "date_to": {
          "type": "string"
        },
        "is_have_discount": {
          "type": "boolean"
        },
        "discount": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "customer_serviceCreateProviderRequest": {
      "type": "object",
      "properties": {
        "slug": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "dark_logo": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "dynamic_percent": {
          "type": "boolean"
        },
        "min": {
          "type": "integer",
          "format": "int32"
        },
        "max": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceCreatePurchaseOptionRequest": {
      "type": "object",
      "properties": {
        "id_1c": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceCreateStoreItems": {
      "type": "object",
      "properties": {
        "good_name": {
          "type": "string"
        },
        "good_type_name": {
          "type": "string"
        },
        "ikpu": {
          "type": "string"
        },
        "sku": {
          "type": "string"
        },
        "marking": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceCreateStoreRequest": {
      "type": "object",
      "properties": {
        "task_id": {
          "type": "string"
        },
        "commission": {
          "type": "integer",
          "format": "int32"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        },
        "condition_id": {
          "type": "string"
        },
        "first_payment_date": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceCreateStoreItems"
          }
        }
      }
    },
    "customer_serviceCreateTbcOrderRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "agent_recomendation_id": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceTbcProduct"
          }
        }
      }
    },
    "customer_serviceCreateTbcOrderResponse": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string"
        },
        "ws_path": {
          "type": "string"
        }
      }
    },
    "customer_serviceCustomer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        }
      }
    },
    "customer_serviceCustomerByIDResponse": {
      "type": "object",
      "properties": {
        "current_step": {
          "type": "string"
        },
        "iman": {
          "$ref": "#/definitions/customer_serviceSingleBnplProvider"
        },
        "my_id": {
          "$ref": "#/definitions/customer_serviceMyIdData"
        },
        "customer_uploaded_docs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceCustomerUploadedDocs"
          }
        },
        "additional_contacts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceAdditionalContact"
          }
        },
        "card_type": {
          "type": "string"
        },
        "card_number": {
          "type": "string"
        },
        "card_expired_at": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "first_payment_date": {
          "type": "integer",
          "format": "int32"
        },
        "approximate_price": {
          "type": "string"
        },
        "experience": {
          "type": "integer",
          "format": "int32"
        },
        "salary": {
          "type": "integer",
          "format": "int32"
        },
        "profession": {
          "type": "string"
        },
        "family_status": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "middle_name": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "wrong_otp": {
          "type": "boolean"
        },
        "is_identified": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "anor": {
          "$ref": "#/definitions/customer_serviceSingleBnplProvider"
        },
        "start_button_pushed": {
          "type": "boolean"
        },
        "address": {
          "$ref": "#/definitions/customer_serviceGetCustomerAddress"
        }
      }
    },
    "customer_serviceCustomerCard": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "card_number": {
          "type": "string"
        },
        "card_expired_at": {
          "type": "string"
        },
        "card_type": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "is_main": {
          "type": "boolean"
        },
        "card_integrations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceCustomerCardIntegration"
          }
        }
      }
    },
    "customer_serviceCustomerCardByIDResponse": {
      "type": "object",
      "properties": {
        "card_integrations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceCustomerCardIntegration"
          }
        }
      }
    },
    "customer_serviceCustomerCardIntegration": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "otp_expired_at": {
          "type": "string"
        },
        "provider_card_id": {
          "type": "string"
        },
        "otp_id": {
          "type": "string"
        },
        "credit_info_status": {
          "type": "string"
        },
        "otp_length": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceCustomerUploadedDocs": {
      "type": "object",
      "properties": {
        "document_type": {
          "type": "string"
        },
        "uploaded_path": {
          "type": "string"
        }
      }
    },
    "customer_serviceData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "sku": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "ikpu": {
          "type": "string"
        },
        "original_price": {
          "type": "integer",
          "format": "int64"
        },
        "price": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int64"
        },
        "category_id": {
          "type": "integer",
          "format": "int64"
        },
        "category_name": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "item_category": {
          "$ref": "#/definitions/customer_serviceItemCategory"
        }
      }
    },
    "customer_serviceDataFromMobile": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "file_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "barcode": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "customer_serviceDeleteDiscountProductsRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deleteAll": {
          "type": "boolean"
        }
      }
    },
    "customer_serviceDeleteOneCInstallmentRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "customer_serviceGenerateContractResponse": {
      "type": "object",
      "properties": {
        "filename": {
          "type": "string"
        }
      }
    },
    "customer_serviceGet1cPurchaseOptionsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_servicePurchaseOptionOneC"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceGetActivityAreasResponse": {
      "type": "object",
      "properties": {
        "activity_areas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceActivityAreas"
          }
        }
      }
    },
    "customer_serviceGetAgentsList": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "fullname": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "branch_id": {
          "type": "string"
        },
        "branch_name": {
          "type": "string"
        },
        "sales": {
          "type": "number",
          "format": "double"
        },
        "bonus": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "customer_serviceGetAgentsListResponse": {
      "type": "object",
      "properties": {
        "agents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceGetAgentsList"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceGetAppPDFResponse": {
      "type": "object",
      "properties": {
        "contract": {
          "type": "string"
        }
      }
    },
    "customer_serviceGetApplicationByIDData": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "double"
        },
        "commission": {
          "type": "integer",
          "format": "int32"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        },
        "created_at": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "reject_reason_key": {
          "type": "string"
        }
      }
    },
    "customer_serviceGetApplicationByIDResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/customer_serviceGetApplicationByIDData"
        }
      }
    },
    "customer_serviceGetApplicationItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "product_name": {
          "type": "string"
        },
        "is_markable": {
          "type": "boolean"
        }
      }
    },
    "customer_serviceGetApplicationItemsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceGetApplicationItem"
          }
        }
      }
    },
    "customer_serviceGetAttachmentsResponse": {
      "type": "object",
      "properties": {
        "urls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "customer_serviceGetBonusAndPlansResponse": {
      "type": "object",
      "properties": {
        "plan": {
          "type": "number",
          "format": "double"
        },
        "fact": {
          "type": "number",
          "format": "double"
        },
        "bonus": {
          "type": "number",
          "format": "double"
        },
        "providers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceProviderBonuses"
          }
        }
      }
    },
    "customer_serviceGetBranchByIDResponse": {
      "type": "object",
      "properties": {
        "branch": {
          "$ref": "#/definitions/customer_serviceBranch"
        }
      }
    },
    "customer_serviceGetBranchPlansResponse": {
      "type": "object",
      "properties": {
        "branch_plans": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceBranchPlan"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceGetBranchesResponse": {
      "type": "object",
      "properties": {
        "branches": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceBranch"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceGetByID": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "customer_serviceGetByUserID": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        }
      }
    },
    "customer_serviceGetConditions": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        },
        "commission": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceGetConditionsResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceGetConditions"
          }
        }
      }
    },
    "customer_serviceGetCustomerAddress": {
      "type": "object",
      "properties": {
        "region_id": {
          "type": "string"
        },
        "district_id": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "address": {
          "type": "string"
        }
      }
    },
    "customer_serviceGetCustomerByIdResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "middle_name": {
          "type": "string"
        },
        "providers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceProvider"
          }
        }
      }
    },
    "customer_serviceGetCustomerCardsResponse": {
      "type": "object",
      "properties": {
        "cards": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceCustomerCard"
          }
        }
      }
    },
    "customer_serviceGetCustomerDocumentsResponse": {
      "type": "object",
      "properties": {
        "withFace": {
          "type": "string"
        },
        "back": {
          "type": "string"
        },
        "front": {
          "type": "string"
        }
      }
    },
    "customer_serviceGetCustomerLimitByProviderResponse": {
      "type": "object",
      "properties": {
        "alif": {
          "$ref": "#/definitions/customer_serviceAlifLimitResponse"
        },
        "tbc": {
          "$ref": "#/definitions/customer_serviceTbcLimitResponse"
        },
        "iman": {
          "$ref": "#/definitions/customer_serviceImanLimitResponse"
        },
        "variant": {
          "$ref": "#/definitions/customer_serviceVariantLimitResponse"
        },
        "anor": {
          "$ref": "#/definitions/customer_serviceAnorLimitResponse"
        },
        "premium": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "customer_serviceGetDistricts": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "district_id_cbu": {
          "type": "string"
        }
      }
    },
    "customer_serviceGetDistrictsResponse": {
      "type": "object",
      "properties": {
        "districts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceGetDistricts"
          }
        }
      }
    },
    "customer_serviceGetFamilyRelations": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "customer_serviceGetFamilyRelationsResponse": {
      "type": "object",
      "properties": {
        "family_relations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceGetFamilyRelations"
          }
        },
        "family_statuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceGetFamilyRelations"
          }
        }
      }
    },
    "customer_serviceGetLimitForExistClientRequest": {
      "type": "object",
      "properties": {
        "phone_number": {
          "type": "string"
        },
        "passport_data": {
          "type": "string"
        },
        "provider_type": {
          "type": "string"
        }
      }
    },
    "customer_serviceGetLimitForExistClientResponse": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "alif": {
          "$ref": "#/definitions/customer_serviceAlifLimitResponse"
        }
      }
    },
    "customer_serviceGetLimitV2": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "double"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceGetLimitV2Data": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "integer",
          "format": "int32"
        },
        "session_id": {
          "type": "string"
        },
        "current_limit": {
          "type": "number",
          "format": "double"
        },
        "limits": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceGetLimitV2"
          }
        }
      }
    },
    "customer_serviceGetLimitV2Response": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/customer_serviceGetLimitV2Data"
        }
      }
    },
    "customer_serviceGetListCustomersResponse": {
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceCustomer"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceGetListProviderResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceBnplProvider"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceGetListTbcInfo": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceGuidAndLabel"
          }
        }
      }
    },
    "customer_serviceGetLoanDocResponse": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string"
        },
        "contract_url": {
          "type": "string"
        },
        "signed_contract_url": {
          "type": "string"
        }
      }
    },
    "customer_serviceGetOfferResponse": {
      "type": "object",
      "properties": {
        "tbc_offers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceTbcOffer"
          }
        }
      }
    },
    "customer_serviceGetOrderProducts": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "mark_kiz": {
          "type": "string"
        },
        "spic": {
          "type": "string"
        },
        "barcode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceGetOrderProductsResponse": {
      "type": "object",
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceGetOrderProducts"
          }
        }
      }
    },
    "customer_serviceGetOrderResponse": {
      "type": "object",
      "properties": {
        "installment_period_month": {
          "type": "integer",
          "format": "int32"
        },
        "base_price": {
          "type": "integer",
          "format": "int32"
        },
        "total_price": {
          "type": "integer",
          "format": "int32"
        },
        "installment_price": {
          "type": "integer",
          "format": "int32"
        },
        "down_payment": {
          "type": "integer",
          "format": "int32"
        },
        "created_at": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "contract_number": {
          "type": "string"
        }
      }
    },
    "customer_serviceGetPrePaymentDataRequest": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string"
        },
        "check_numbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "customer_serviceGetPrePaymentDataResponse": {
      "type": "object",
      "properties": {
        "check_numbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceProviderProduct"
          }
        },
        "full_name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceNasiyaCalculatorForPaymentParams"
          }
        },
        "prepayment": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "customer_serviceGetPrecheckDetailsByIDResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "branch_name": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "status": {
          "type": "boolean"
        },
        "check_number": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceGetPrecheckProduct"
          }
        }
      }
    },
    "customer_serviceGetPrecheckProduct": {
      "type": "object",
      "properties": {
        "product_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "seller_name": {
          "type": "string"
        },
        "seller_id": {
          "type": "string"
        }
      }
    },
    "customer_serviceGetPrechecksList": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "branch_name": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "status": {
          "type": "boolean"
        },
        "check_number": {
          "type": "string"
        }
      }
    },
    "customer_serviceGetPrechecksListResponse": {
      "type": "object",
      "properties": {
        "prechecks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceGetPrechecksList"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceGetProductResponse": {
      "type": "object",
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceVariantProduct"
          }
        }
      }
    },
    "customer_serviceGetProviderOptionsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceProviderOption"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceGetPurchaseOptionsResponse": {
      "type": "object",
      "properties": {
        "purchase_options": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_servicePurchaseOption"
          }
        }
      }
    },
    "customer_serviceGetRegions": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "region_id_cbu": {
          "type": "string"
        }
      }
    },
    "customer_serviceGetRegionsResponse": {
      "type": "object",
      "properties": {
        "regions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceGetRegions"
          }
        }
      }
    },
    "customer_serviceGuidAndLabel": {
      "type": "object",
      "properties": {
        "guid": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
    },
    "customer_serviceImanEventResponse": {
      "type": "object",
      "properties": {
        "ws_path": {
          "type": "string"
        }
      }
    },
    "customer_serviceImanLimit": {
      "type": "object",
      "properties": {
        "amount_limit": {
          "type": "number",
          "format": "double"
        },
        "period_month": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceImanLimitResponse": {
      "type": "object",
      "properties": {
        "customer_limit": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceImanLimit"
          }
        }
      }
    },
    "customer_serviceInsertDiscountProductRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "discount": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "customer_serviceItemCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "is_markable": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "customer_serviceItems": {
      "type": "object",
      "properties": {
        "good_name": {
          "type": "string"
        },
        "good_type_name": {
          "type": "string"
        },
        "ikpu": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "sku": {
          "type": "string"
        },
        "item_id": {
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "is_markable": {
          "type": "boolean"
        },
        "mark_kiz": {
          "type": "string"
        }
      }
    },
    "customer_serviceListDiscountProductsResponse": {
      "type": "object",
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceInsertDiscountProductRequest"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceListPurchaseOptionBonus": {
      "type": "object",
      "properties": {
        "purchase_option_bonus": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_servicePurchaseOptionBonus"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceMeta": {
      "type": "object",
      "properties": {
        "current_page": {
          "type": "integer",
          "format": "int32"
        },
        "per_page": {
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceMyIdData": {
      "type": "object",
      "properties": {
        "phone_number": {
          "type": "string"
        },
        "pass_data": {
          "type": "string"
        },
        "birth_date": {
          "type": "string"
        },
        "pinfl": {
          "type": "string"
        },
        "passport_type": {
          "type": "string"
        },
        "photo_from_camera": {
          "$ref": "#/definitions/customer_servicePhotoFromCamera"
        }
      }
    },
    "customer_serviceNasiyaCalculatorForPaymentParams": {
      "type": "object",
      "properties": {
        "total_amount": {
          "type": "number",
          "format": "double"
        },
        "base_amount": {
          "type": "number",
          "format": "double"
        },
        "monthly_amount": {
          "type": "number",
          "format": "double"
        },
        "id": {
          "type": "string"
        },
        "commission": {
          "type": "number",
          "format": "double"
        },
        "type": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "temp_check_number": {
          "type": "string"
        }
      }
    },
    "customer_serviceNasiyaCalculatorForPaymentResponse": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceNasiyaCalculatorForPaymentParams"
          }
        }
      }
    },
    "customer_serviceNasiyaCalculatorForPaymentV2Response": {
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "#/definitions/customer_serviceNasiyaCalculatorForPaymentParams"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceProductWithDiscount"
          }
        }
      }
    },
    "customer_serviceNasiyaCalculatorRequest": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "double"
        },
        "prepayment": {
          "type": "number",
          "format": "double"
        },
        "slug": {
          "type": "string"
        },
        "percent": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "customer_serviceNasiyaCalculatorV2Request": {
      "type": "object",
      "properties": {
        "check_numbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "slug": {
          "type": "string"
        },
        "purchase_option_id": {
          "type": "string"
        },
        "prepayment": {
          "type": "number",
          "format": "double"
        },
        "percent": {
          "type": "number",
          "format": "double"
        },
        "prepayment_product_id": {
          "type": "string"
        },
        "prepayment_type": {
          "type": "string"
        }
      }
    },
    "customer_serviceOpenLimit": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "number",
          "format": "double"
        },
        "period": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceOpenLimitResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceOpenLimit"
          }
        }
      }
    },
    "customer_serviceOrderDownPaymentResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "customer_serviceOrderID": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string"
        }
      }
    },
    "customer_servicePercents": {
      "type": "object",
      "properties": {
        "month": {
          "type": "integer",
          "format": "int32"
        },
        "percent": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_servicePercentsResponse": {
      "type": "object",
      "properties": {
        "percents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_servicePercents"
          }
        }
      }
    },
    "customer_servicePhotoFromCamera": {
      "type": "object",
      "properties": {
        "front": {
          "type": "string"
        }
      }
    },
    "customer_servicePrecheckSearchFields": {
      "type": "string",
      "enum": [
        "check_number",
        "full_name",
        "client_phone_number"
      ],
      "default": "check_number"
    },
    "customer_servicePremiumCancelReasonsResponse": {
      "type": "object",
      "properties": {
        "cancel_reasons": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "customer_servicePremiumCancelRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "order_id": {
          "type": "string"
        },
        "reason_message": {
          "type": "string"
        }
      }
    },
    "customer_servicePremiumOrderProduct": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "customer_servicePremiumOrderRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_servicePremiumOrderProduct"
          }
        },
        "expired_month": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_servicePremiumOrderResponse": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string"
        }
      }
    },
    "customer_servicePremiumOrderSignRequest": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        }
      }
    },
    "customer_servicePremiumResponse": {
      "type": "object",
      "properties": {
        "document_link": {
          "type": "string"
        }
      }
    },
    "customer_serviceProductMarkings": {
      "type": "object",
      "properties": {
        "product_id": {
          "type": "string"
        },
        "marking": {
          "type": "string"
        }
      }
    },
    "customer_serviceProductWithDiscount": {
      "type": "object",
      "properties": {
        "product_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "price_with_discount": {
          "type": "number",
          "format": "double"
        },
        "quantity": {
          "type": "number",
          "format": "double"
        },
        "has_discount": {
          "type": "boolean"
        },
        "seller_id": {
          "type": "string"
        },
        "seller_name": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "discount_price": {
          "type": "number",
          "format": "double"
        },
        "price_type": {
          "type": "string"
        },
        "promotion": {
          "type": "boolean"
        },
        "mark": {
          "type": "string"
        }
      }
    },
    "customer_serviceProducts": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "mark_kiz": {
          "type": "string"
        },
        "spic": {
          "type": "string"
        },
        "seller_name": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "quantity": {
          "type": "number",
          "format": "double"
        },
        "mark": {
          "type": "string"
        },
        "product_id": {
          "type": "string"
        }
      }
    },
    "customer_serviceProvider": {
      "type": "object",
      "properties": {
        "task_id": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "integration_status": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        }
      }
    },
    "customer_serviceProviderBonuses": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "bonus": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "customer_serviceProviderOption": {
      "type": "object",
      "properties": {
        "provider_id": {
          "type": "string"
        },
        "purchase_options_1c_id": {
          "type": "string"
        },
        "commission": {
          "type": "number",
          "format": "double"
        },
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "provider": {
          "$ref": "#/definitions/customer_serviceBnplProvider"
        },
        "purchase_options1c": {
          "$ref": "#/definitions/customer_servicePurchaseOptionOneC"
        },
        "bonus": {
          "type": "number",
          "format": "double"
        },
        "date_from": {
          "type": "string"
        },
        "date_to": {
          "type": "string"
        },
        "is_have_discount": {
          "type": "boolean"
        },
        "discount": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "customer_serviceProviderProduct": {
      "type": "object",
      "properties": {
        "product_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "seller_id": {
          "type": "string"
        },
        "seller_name": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "discount_price": {
          "type": "number",
          "format": "double"
        },
        "price_type": {
          "type": "string"
        },
        "promotion": {
          "type": "boolean"
        }
      }
    },
    "customer_serviceProviderStatus": {
      "type": "object",
      "properties": {
        "task_id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "integration_status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "ws_path_scoring": {
          "type": "string"
        },
        "card_id": {
          "type": "string"
        },
        "provider_status": {
          "type": "string"
        },
        "reject_message": {
          "type": "string"
        }
      }
    },
    "customer_servicePurchaseOption": {
      "type": "object",
      "properties": {
        "installment_amount": {
          "type": "number",
          "format": "double"
        },
        "downpayment": {
          "type": "number",
          "format": "double"
        },
        "monthly_payment": {
          "type": "number",
          "format": "double"
        },
        "period_in_month": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_servicePurchaseOptionBonus": {
      "type": "object",
      "properties": {
        "date_from": {
          "type": "string"
        },
        "date_to": {
          "type": "string"
        },
        "purchase_option_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "bonus": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "customer_servicePurchaseOptionOneC": {
      "type": "object",
      "properties": {
        "id_1c": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceRegisterCardRequest": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "card_id": {
          "type": "string"
        },
        "otp_id": {
          "type": "string"
        },
        "provider_card_id": {
          "type": "string"
        },
        "other_card_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "customer_serviceRegisterCardResponse": {
      "type": "object",
      "properties": {
        "is_confirm": {
          "type": "boolean"
        },
        "provider_card_id": {
          "type": "string"
        },
        "otp_id": {
          "type": "string"
        },
        "otp_expired_at": {
          "type": "string"
        },
        "anor_ws_path": {
          "type": "string"
        }
      }
    },
    "customer_serviceRegisterCustomerRequestV2": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "family_status": {
          "type": "string"
        },
        "profession": {
          "type": "string"
        },
        "experience": {
          "type": "integer",
          "format": "int32"
        },
        "salary": {
          "type": "integer",
          "format": "int32"
        },
        "category": {
          "type": "string"
        },
        "first_payment_date": {
          "type": "integer",
          "format": "int32"
        },
        "additional_contacts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceAdditionalContact"
          }
        },
        "approximate_price": {
          "type": "string"
        },
        "region_id": {
          "type": "integer",
          "format": "int32"
        },
        "district_id": {
          "type": "integer",
          "format": "int32"
        },
        "address": {
          "type": "string"
        }
      }
    },
    "customer_serviceResult": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "information": {
          "type": "string"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "customer_serviceScoringData": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "integer",
          "format": "int32"
        },
        "session_id": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "expire_time": {
          "type": "string"
        }
      }
    },
    "customer_serviceScoringResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/customer_serviceScoringData"
        }
      }
    },
    "customer_serviceSearchFields": {
      "type": "string",
      "enum": [
        "phone_number",
        "pinfl",
        "first_name",
        "pass_data"
      ],
      "default": "phone_number"
    },
    "customer_serviceSendDataOneCAfterSuccessInstallmentRequest": {
      "type": "object",
      "properties": {
        "check_numbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "full_name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "order_id": {
          "type": "string"
        },
        "option_id": {
          "type": "string"
        },
        "prepayment_type": {
          "type": "string"
        },
        "cash_downpayment": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "customer_serviceSendLimitToAnorMobileRequest": {
      "type": "object",
      "properties": {
        "task_id": {
          "type": "string"
        },
        "action_id": {
          "type": "string"
        }
      }
    },
    "customer_serviceSignOrderRequest": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string"
        },
        "loan_photo": {
          "type": "string"
        }
      }
    },
    "customer_serviceSingleBnplProvider": {
      "type": "object",
      "properties": {
        "task_id": {
          "type": "string"
        },
        "credit_info_status": {
          "type": "string"
        },
        "integration_status": {
          "type": "string"
        },
        "ws_path_credit_info": {
          "type": "string"
        },
        "ws_path_scoring": {
          "type": "string"
        }
      }
    },
    "customer_serviceStartOnboardingRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "otp": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "send_code": {
          "type": "boolean"
        }
      }
    },
    "customer_serviceStartOnboardingResponse": {
      "type": "object",
      "properties": {
        "ws_path": {
          "type": "string"
        }
      }
    },
    "customer_serviceTaskID": {
      "type": "object",
      "properties": {
        "task_id": {
          "type": "string"
        }
      }
    },
    "customer_serviceTbcLimit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "period_month": {
          "type": "integer",
          "format": "int32"
        },
        "amount_limit": {
          "type": "number",
          "format": "double"
        },
        "monthly_payment_amount": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "customer_serviceTbcLimitResponse": {
      "type": "object",
      "properties": {
        "customer_limits": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceTbcLimit"
          }
        }
      }
    },
    "customer_serviceTbcOffer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "term": {
          "type": "integer",
          "format": "int32"
        },
        "total_amount": {
          "type": "number",
          "format": "double"
        },
        "monthly_payment_amount": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "customer_serviceTbcProduct": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "product_name": {
          "type": "string"
        },
        "mxik": {
          "type": "string"
        },
        "price": {
          "type": "integer",
          "format": "int32"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customer_serviceUpdateCustomerCardRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "card_id": {
          "type": "string"
        },
        "card_number": {
          "type": "string"
        },
        "card_type": {
          "type": "string"
        },
        "card_expired_at": {
          "type": "string"
        }
      }
    },
    "customer_serviceUpdateCustomerMainCardRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "card_id": {
          "type": "string"
        }
      }
    },
    "customer_serviceUpdateCustomerOrderStatusRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "customer_serviceUpdateMarkingItems": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "marking": {
          "type": "string"
        }
      }
    },
    "customer_serviceUpdateMarkingRequest": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceUpdateMarkingItems"
          }
        }
      }
    },
    "customer_serviceUpsertAgentTokenRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "customer_serviceUpsertDiscountProductsRequest": {
      "type": "object",
      "properties": {
        "filename": {
          "type": "string"
        }
      }
    },
    "customer_serviceVariantLimitResponse": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "number",
          "format": "double"
        },
        "pre_payment_percent": {
          "type": "integer",
          "format": "int32"
        },
        "pre_payment": {
          "type": "number",
          "format": "double"
        },
        "default_limit": {
          "type": "boolean"
        },
        "default_limit_amount": {
          "type": "number",
          "format": "double"
        },
        "get_default_limit": {
          "type": "boolean"
        }
      }
    },
    "customer_serviceVariantOrderRequest": {
      "type": "object",
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/customer_serviceVariantProduct"
          }
        },
        "user_id": {
          "type": "string"
        },
        "period": {
          "type": "integer",
          "format": "int32"
        },
        "pre_payment": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "customer_serviceVariantOrderResponse": {
      "type": "object",
      "properties": {
        "total_amount": {
          "type": "number",
          "format": "double"
        },
        "pre_payment": {
          "type": "number",
          "format": "double"
        },
        "contract": {
          "type": "string"
        },
        "order_id": {
          "type": "string"
        }
      }
    },
    "customer_serviceVariantOrderSignResponse": {
      "type": "object",
      "properties": {
        "ws_path": {
          "type": "string"
        }
      }
    },
    "customer_serviceVariantProduct": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "sku": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "class_code": {
          "type": "string"
        },
        "category_id": {
          "type": "integer",
          "format": "int32"
        },
        "serial_number": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "category_title": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "report_serviceBranchPlanReport": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "yearly_total_amount": {
          "type": "number",
          "format": "double"
        },
        "yearly_sellers": {
          "type": "integer",
          "format": "int32"
        },
        "current_month_plan": {
          "type": "number",
          "format": "double"
        },
        "one_month_ago_plan": {
          "type": "number",
          "format": "double"
        },
        "two_months_ago_plan": {
          "type": "number",
          "format": "double"
        },
        "current_month_fact": {
          "type": "string"
        },
        "one_month_ago_fact": {
          "type": "string"
        },
        "two_months_ago_fact": {
          "type": "string"
        },
        "diff_amounts": {
          "$ref": "#/definitions/report_serviceDiffAmounts"
        },
        "branch_id": {
          "type": "string"
        }
      }
    },
    "report_serviceBranchPlanReportResponse": {
      "type": "object",
      "properties": {
        "branches": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/report_serviceBranchPlanReport"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "labels": {
          "$ref": "#/definitions/report_serviceLabels"
        }
      }
    },
    "report_serviceBranchesReport": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "yearly_total_count": {
          "type": "integer",
          "format": "int32"
        },
        "yearly_total_amount": {
          "type": "number",
          "format": "double"
        },
        "yearly_sellers": {
          "type": "integer",
          "format": "int32"
        },
        "month_total_count": {
          "type": "integer",
          "format": "int32"
        },
        "month_total_amount": {
          "type": "number",
          "format": "double"
        },
        "total_count_2": {
          "type": "integer",
          "format": "int32"
        },
        "total_amount_2": {
          "type": "number",
          "format": "double"
        },
        "total_count_1": {
          "type": "integer",
          "format": "int32"
        },
        "total_amount_1": {
          "type": "number",
          "format": "double"
        },
        "diff_counts": {
          "$ref": "#/definitions/report_serviceDiffCounts"
        },
        "diff_amounts": {
          "$ref": "#/definitions/report_serviceDiffAmounts"
        }
      }
    },
    "report_serviceBranchesReportResponse": {
      "type": "object",
      "properties": {
        "branches": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/report_serviceBranchesReport"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "labels": {
          "$ref": "#/definitions/report_serviceLabels"
        }
      }
    },
    "report_serviceCustomerLimits": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "agent_name": {
          "type": "string"
        },
        "agent_id": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "branch_name": {
          "type": "string"
        }
      }
    },
    "report_serviceDashboardBarChart": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "order_broker_count": {
          "type": "integer",
          "format": "int32"
        },
        "order_1c_count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "report_serviceDashboardResponse": {
      "type": "object",
      "properties": {
        "total_application": {
          "type": "integer",
          "format": "int32"
        },
        "apps_count_by_1c": {
          "type": "integer",
          "format": "int32"
        },
        "apps_count_by_providers": {
          "type": "integer",
          "format": "int32"
        },
        "limits_count": {
          "type": "integer",
          "format": "int32"
        },
        "dates": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "order_1c": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "order_broker": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "bar_chart": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/report_serviceDashboardBarChart"
          }
        },
        "daily_apps_1c": {
          "type": "integer",
          "format": "int32"
        },
        "daily_apps_providers": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "report_serviceDiffAmounts": {
      "type": "object",
      "properties": {
        "percent": {
          "type": "string"
        },
        "color": {
          "type": "string"
        }
      }
    },
    "report_serviceDiffCounts": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "color": {
          "type": "string"
        }
      }
    },
    "report_serviceDiffTotals": {
      "type": "object",
      "properties": {
        "diff": {
          "type": "number",
          "format": "double"
        },
        "color": {
          "type": "string"
        }
      }
    },
    "report_serviceEmployeesPlanReport": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "current_month_plan": {
          "type": "number",
          "format": "double"
        },
        "current_month_fact": {
          "type": "string"
        },
        "current_month_amount": {
          "type": "number",
          "format": "double"
        },
        "one_month_ago_plan": {
          "type": "number",
          "format": "double"
        },
        "one_month_ago_fact": {
          "type": "string"
        },
        "one_month_ago_amount": {
          "type": "number",
          "format": "double"
        },
        "two_months_ago_plan": {
          "type": "number",
          "format": "double"
        },
        "two_months_ago_fact": {
          "type": "string"
        },
        "two_months_ago_amount": {
          "type": "number",
          "format": "double"
        },
        "diff_facts": {
          "$ref": "#/definitions/report_serviceDiffAmounts"
        },
        "diff_amounts": {
          "$ref": "#/definitions/report_serviceDiffTotals"
        }
      }
    },
    "report_serviceEmployeesPlanReportResponse": {
      "type": "object",
      "properties": {
        "employees": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/report_serviceEmployeesPlanReport"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "labels": {
          "$ref": "#/definitions/report_serviceLabels"
        }
      }
    },
    "report_serviceGetCustomersInstallmentsResponse": {
      "type": "object",
      "properties": {
        "installments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/report_serviceInstallment"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "report_serviceGetCustomersLimitResponse": {
      "type": "object",
      "properties": {
        "limits": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/report_serviceCustomerLimits"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "report_serviceGetIdentifiedCustomersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/report_serviceIdentifiedUser"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "report_serviceIdentifiedUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "agent_name": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "agent_id": {
          "type": "string"
        },
        "branch_name": {
          "type": "string"
        }
      }
    },
    "report_serviceInstallment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "agent_name": {
          "type": "string"
        },
        "branch_name": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "agent_id": {
          "type": "string"
        },
        "total_amount_1c": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "report_serviceInstallmentsInExcelResponse": {
      "type": "object",
      "properties": {
        "link": {
          "type": "string"
        }
      }
    },
    "report_serviceLabels": {
      "type": "object",
      "properties": {
        "year": {
          "type": "string"
        },
        "month": {
          "type": "string"
        },
        "week_1": {
          "type": "string"
        },
        "week_2": {
          "type": "string"
        },
        "month_1": {
          "type": "string"
        },
        "month_2": {
          "type": "string"
        }
      }
    },
    "report_serviceReportFiltersResponse": {
      "type": "object",
      "properties": {
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "branches": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "sms_serviceConfirmSmsRequest": {
      "type": "object",
      "properties": {
        "otp": {
          "type": "string"
        },
        "sms_id": {
          "type": "string"
        }
      }
    },
    "sms_serviceSendSmsRequest": {
      "type": "object",
      "properties": {
        "phone_number": {
          "type": "string"
        }
      }
    },
    "sms_serviceSendSmsResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "sms_serviceTelegramSendRequest": {
      "type": "object",
      "properties": {
        "check_number": {
          "type": "string"
        }
      }
    },
    "user_serviceCreateMyIdUserRequest": {
      "type": "object",
      "properties": {
        "pass_data": {
          "type": "string"
        },
        "pinfl": {
          "type": "string"
        },
        "birth_date": {
          "type": "string"
        },
        "photo_from_camera": {
          "$ref": "#/definitions/user_servicePhotoFromCamera"
        },
        "agreed_on_terms": {
          "type": "boolean"
        },
        "phone_number": {
          "type": "string"
        },
        "lang": {
          "type": "string"
        },
        "sms_id": {
          "type": "string"
        },
        "otp": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        }
      }
    },
    "user_serviceCreateMyIdUserResponse": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "passport_type": {
          "type": "string"
        }
      }
    },
    "user_servicePhotoFromCamera": {
      "type": "object",
      "properties": {
        "front": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
