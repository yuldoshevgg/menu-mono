syntax = "proto3";

package auth_service;
option go_package = "gitlab.com/media_park/bnpl-mono-repo/generated/auth_service";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "auth_service/user_types.proto";
import "google/protobuf/empty.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: { title: "API" version: "1.0.0" }
    security_definitions: {
        security: {
            key: "bearer"
            value: { type: TYPE_API_KEY in: IN_HEADER name: "Authorization" description: "Authentication token, prefixed by Bearer: Bearer <token>" }
        }
    }
    security: { security_requirement: { key: "bearer" } }
};

service UserService {
    rpc CreateUser(CreateUserRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/users"
            body: "*"
        };
    }
    rpc GetUser(GetUserRequest) returns (GetUserResponse) {
        option (google.api.http) = {
            get: "/v1/users/{id}"
        };
    }
    rpc UpdateUser(UpdateUserRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/v1/users/{id}"
            body: "*"
        };
    }
    rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/users/{id}"
        };
    }
    rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
        option (google.api.http) = {
            get: "/v1/users"
        };
    }
}